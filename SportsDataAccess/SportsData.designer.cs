#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SportsDataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sports")]
	public partial class SportsDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGameInfo(GameInfo instance);
    partial void UpdateGameInfo(GameInfo instance);
    partial void DeleteGameInfo(GameInfo instance);
    partial void InsertLeagueInfo(LeagueInfo instance);
    partial void UpdateLeagueInfo(LeagueInfo instance);
    partial void DeleteLeagueInfo(LeagueInfo instance);
    partial void InsertTeamInfo(TeamInfo instance);
    partial void UpdateTeamInfo(TeamInfo instance);
    partial void DeleteTeamInfo(TeamInfo instance);
    partial void InsertPlayerInfo(PlayerInfo instance);
    partial void UpdatePlayerInfo(PlayerInfo instance);
    partial void DeletePlayerInfo(PlayerInfo instance);
    partial void InsertNBAAdvTotalPlayerStat(NBAAdvTotalPlayerStat instance);
    partial void UpdateNBAAdvTotalPlayerStat(NBAAdvTotalPlayerStat instance);
    partial void DeleteNBAAdvTotalPlayerStat(NBAAdvTotalPlayerStat instance);
    partial void InsertWeekInfo(WeekInfo instance);
    partial void UpdateWeekInfo(WeekInfo instance);
    partial void DeleteWeekInfo(WeekInfo instance);
    partial void InsertMatchupInfo(MatchupInfo instance);
    partial void UpdateMatchupInfo(MatchupInfo instance);
    partial void DeleteMatchupInfo(MatchupInfo instance);
    partial void InsertNBAAdvWeeklyPlayerStat(NBAAdvWeeklyPlayerStat instance);
    partial void UpdateNBAAdvWeeklyPlayerStat(NBAAdvWeeklyPlayerStat instance);
    partial void DeleteNBAAdvWeeklyPlayerStat(NBAAdvWeeklyPlayerStat instance);
    partial void InsertNBAWeeklyPlayerStat(NBAWeeklyPlayerStat instance);
    partial void UpdateNBAWeeklyPlayerStat(NBAWeeklyPlayerStat instance);
    partial void DeleteNBAWeeklyPlayerStat(NBAWeeklyPlayerStat instance);
    partial void InsertNBAWeeklyTeamStat(NBAWeeklyTeamStat instance);
    partial void UpdateNBAWeeklyTeamStat(NBAWeeklyTeamStat instance);
    partial void DeleteNBAWeeklyTeamStat(NBAWeeklyTeamStat instance);
    #endregion
		
		public SportsDataDataContext() : 
				base(global::SportsDataAccess.Properties.Settings.Default.SportsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SportsDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SportsDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SportsDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SportsDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GameInfo> GameInfos
		{
			get
			{
				return this.GetTable<GameInfo>();
			}
		}
		
		public System.Data.Linq.Table<LeagueInfo> LeagueInfos
		{
			get
			{
				return this.GetTable<LeagueInfo>();
			}
		}
		
		public System.Data.Linq.Table<TeamInfo> TeamInfos
		{
			get
			{
				return this.GetTable<TeamInfo>();
			}
		}
		
		public System.Data.Linq.Table<PlayerInfo> PlayerInfos
		{
			get
			{
				return this.GetTable<PlayerInfo>();
			}
		}
		
		public System.Data.Linq.Table<NBAAdvTotalPlayerStat> NBAAdvTotalPlayerStats
		{
			get
			{
				return this.GetTable<NBAAdvTotalPlayerStat>();
			}
		}
		
		public System.Data.Linq.Table<WeekInfo> WeekInfos
		{
			get
			{
				return this.GetTable<WeekInfo>();
			}
		}
		
		public System.Data.Linq.Table<MatchupInfo> MatchupInfos
		{
			get
			{
				return this.GetTable<MatchupInfo>();
			}
		}
		
		public System.Data.Linq.Table<NBAAdvWeeklyPlayerStat> NBAAdvWeeklyPlayerStats
		{
			get
			{
				return this.GetTable<NBAAdvWeeklyPlayerStat>();
			}
		}
		
		public System.Data.Linq.Table<NBAWeeklyPlayerStat> NBAWeeklyPlayerStats
		{
			get
			{
				return this.GetTable<NBAWeeklyPlayerStat>();
			}
		}
		
		public System.Data.Linq.Table<NBAWeeklyTeamStat> NBAWeeklyTeamStats
		{
			get
			{
				return this.GetTable<NBAWeeklyTeamStat>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GameInfo")]
	public partial class GameInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _game_key;
		
		private string _game_id;
		
		private string _name;
		
		private string _code;
		
		private string _season;
		
		private EntitySet<LeagueInfo> _LeagueInfos;
		
		private EntitySet<PlayerInfo> _PlayerInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongame_keyChanging(string value);
    partial void Ongame_keyChanged();
    partial void Ongame_idChanging(string value);
    partial void Ongame_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnseasonChanging(string value);
    partial void OnseasonChanged();
    #endregion
		
		public GameInfo()
		{
			this._LeagueInfos = new EntitySet<LeagueInfo>(new Action<LeagueInfo>(this.attach_LeagueInfos), new Action<LeagueInfo>(this.detach_LeagueInfos));
			this._PlayerInfos = new EntitySet<PlayerInfo>(new Action<PlayerInfo>(this.attach_PlayerInfos), new Action<PlayerInfo>(this.detach_PlayerInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string game_key
		{
			get
			{
				return this._game_key;
			}
			set
			{
				if ((this._game_key != value))
				{
					this.Ongame_keyChanging(value);
					this.SendPropertyChanging();
					this._game_key = value;
					this.SendPropertyChanged("game_key");
					this.Ongame_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_id", DbType="NVarChar(50)")]
		public string game_id
		{
			get
			{
				return this._game_id;
			}
			set
			{
				if ((this._game_id != value))
				{
					this.Ongame_idChanging(value);
					this.SendPropertyChanging();
					this._game_id = value;
					this.SendPropertyChanged("game_id");
					this.Ongame_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season", DbType="NVarChar(50)")]
		public string season
		{
			get
			{
				return this._season;
			}
			set
			{
				if ((this._season != value))
				{
					this.OnseasonChanging(value);
					this.SendPropertyChanging();
					this._season = value;
					this.SendPropertyChanged("season");
					this.OnseasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameInfo_LeagueInfo", Storage="_LeagueInfos", ThisKey="game_key", OtherKey="game_key")]
		public EntitySet<LeagueInfo> LeagueInfos
		{
			get
			{
				return this._LeagueInfos;
			}
			set
			{
				this._LeagueInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameInfo_PlayerInfo", Storage="_PlayerInfos", ThisKey="game_key", OtherKey="game_key")]
		public EntitySet<PlayerInfo> PlayerInfos
		{
			get
			{
				return this._PlayerInfos;
			}
			set
			{
				this._PlayerInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LeagueInfos(LeagueInfo entity)
		{
			this.SendPropertyChanging();
			entity.GameInfo = this;
		}
		
		private void detach_LeagueInfos(LeagueInfo entity)
		{
			this.SendPropertyChanging();
			entity.GameInfo = null;
		}
		
		private void attach_PlayerInfos(PlayerInfo entity)
		{
			this.SendPropertyChanging();
			entity.GameInfo = this;
		}
		
		private void detach_PlayerInfos(PlayerInfo entity)
		{
			this.SendPropertyChanging();
			entity.GameInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeagueInfo")]
	public partial class LeagueInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _league_key;
		
		private string _league_id;
		
		private string _game_key;
		
		private string _name;
		
		private EntitySet<TeamInfo> _TeamInfos;
		
		private EntitySet<NBAAdvTotalPlayerStat> _NBAAdvTotalPlayerStats;
		
		private EntitySet<WeekInfo> _WeekInfos;
		
		private EntitySet<MatchupInfo> _MatchupInfos;
		
		private EntityRef<GameInfo> _GameInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onleague_keyChanging(string value);
    partial void Onleague_keyChanged();
    partial void Onleague_idChanging(string value);
    partial void Onleague_idChanged();
    partial void Ongame_keyChanging(string value);
    partial void Ongame_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public LeagueInfo()
		{
			this._TeamInfos = new EntitySet<TeamInfo>(new Action<TeamInfo>(this.attach_TeamInfos), new Action<TeamInfo>(this.detach_TeamInfos));
			this._NBAAdvTotalPlayerStats = new EntitySet<NBAAdvTotalPlayerStat>(new Action<NBAAdvTotalPlayerStat>(this.attach_NBAAdvTotalPlayerStats), new Action<NBAAdvTotalPlayerStat>(this.detach_NBAAdvTotalPlayerStats));
			this._WeekInfos = new EntitySet<WeekInfo>(new Action<WeekInfo>(this.attach_WeekInfos), new Action<WeekInfo>(this.detach_WeekInfos));
			this._MatchupInfos = new EntitySet<MatchupInfo>(new Action<MatchupInfo>(this.attach_MatchupInfos), new Action<MatchupInfo>(this.detach_MatchupInfos));
			this._GameInfo = default(EntityRef<GameInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_league_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string league_key
		{
			get
			{
				return this._league_key;
			}
			set
			{
				if ((this._league_key != value))
				{
					this.Onleague_keyChanging(value);
					this.SendPropertyChanging();
					this._league_key = value;
					this.SendPropertyChanged("league_key");
					this.Onleague_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_league_id", DbType="NVarChar(50)")]
		public string league_id
		{
			get
			{
				return this._league_id;
			}
			set
			{
				if ((this._league_id != value))
				{
					this.Onleague_idChanging(value);
					this.SendPropertyChanging();
					this._league_id = value;
					this.SendPropertyChanged("league_id");
					this.Onleague_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_key", DbType="NVarChar(50)")]
		public string game_key
		{
			get
			{
				return this._game_key;
			}
			set
			{
				if ((this._game_key != value))
				{
					if (this._GameInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongame_keyChanging(value);
					this.SendPropertyChanging();
					this._game_key = value;
					this.SendPropertyChanged("game_key");
					this.Ongame_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_TeamInfo", Storage="_TeamInfos", ThisKey="league_key", OtherKey="league_key")]
		public EntitySet<TeamInfo> TeamInfos
		{
			get
			{
				return this._TeamInfos;
			}
			set
			{
				this._TeamInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_NBAAdvTotalPlayerStat", Storage="_NBAAdvTotalPlayerStats", ThisKey="league_key", OtherKey="league_key")]
		public EntitySet<NBAAdvTotalPlayerStat> NBAAdvTotalPlayerStats
		{
			get
			{
				return this._NBAAdvTotalPlayerStats;
			}
			set
			{
				this._NBAAdvTotalPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_WeekInfo", Storage="_WeekInfos", ThisKey="league_key", OtherKey="league_key")]
		public EntitySet<WeekInfo> WeekInfos
		{
			get
			{
				return this._WeekInfos;
			}
			set
			{
				this._WeekInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_MatchupInfo", Storage="_MatchupInfos", ThisKey="league_key", OtherKey="league_key")]
		public EntitySet<MatchupInfo> MatchupInfos
		{
			get
			{
				return this._MatchupInfos;
			}
			set
			{
				this._MatchupInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameInfo_LeagueInfo", Storage="_GameInfo", ThisKey="game_key", OtherKey="game_key", IsForeignKey=true)]
		public GameInfo GameInfo
		{
			get
			{
				return this._GameInfo.Entity;
			}
			set
			{
				GameInfo previousValue = this._GameInfo.Entity;
				if (((previousValue != value) 
							|| (this._GameInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameInfo.Entity = null;
						previousValue.LeagueInfos.Remove(this);
					}
					this._GameInfo.Entity = value;
					if ((value != null))
					{
						value.LeagueInfos.Add(this);
						this._game_key = value.game_key;
					}
					else
					{
						this._game_key = default(string);
					}
					this.SendPropertyChanged("GameInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TeamInfos(TeamInfo entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = this;
		}
		
		private void detach_TeamInfos(TeamInfo entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = null;
		}
		
		private void attach_NBAAdvTotalPlayerStats(NBAAdvTotalPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = this;
		}
		
		private void detach_NBAAdvTotalPlayerStats(NBAAdvTotalPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = null;
		}
		
		private void attach_WeekInfos(WeekInfo entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = this;
		}
		
		private void detach_WeekInfos(WeekInfo entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = null;
		}
		
		private void attach_MatchupInfos(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = this;
		}
		
		private void detach_MatchupInfos(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.LeagueInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamInfo")]
	public partial class TeamInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _team_key;
		
		private string _team_id;
		
		private string _league_key;
		
		private string _name;
		
		private string _manager;
		
		private EntitySet<MatchupInfo> _MatchupInfos;
		
		private EntitySet<MatchupInfo> _MatchupInfos1;
		
		private EntitySet<NBAAdvWeeklyPlayerStat> _NBAAdvWeeklyPlayerStats;
		
		private EntitySet<NBAWeeklyPlayerStat> _NBAWeeklyPlayerStats;
		
		private EntitySet<NBAWeeklyTeamStat> _NBAWeeklyTeamStats;
		
		private EntityRef<LeagueInfo> _LeagueInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteam_keyChanging(string value);
    partial void Onteam_keyChanged();
    partial void Onteam_idChanging(string value);
    partial void Onteam_idChanged();
    partial void Onleague_keyChanging(string value);
    partial void Onleague_keyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmanagerChanging(string value);
    partial void OnmanagerChanged();
    #endregion
		
		public TeamInfo()
		{
			this._MatchupInfos = new EntitySet<MatchupInfo>(new Action<MatchupInfo>(this.attach_MatchupInfos), new Action<MatchupInfo>(this.detach_MatchupInfos));
			this._MatchupInfos1 = new EntitySet<MatchupInfo>(new Action<MatchupInfo>(this.attach_MatchupInfos1), new Action<MatchupInfo>(this.detach_MatchupInfos1));
			this._NBAAdvWeeklyPlayerStats = new EntitySet<NBAAdvWeeklyPlayerStat>(new Action<NBAAdvWeeklyPlayerStat>(this.attach_NBAAdvWeeklyPlayerStats), new Action<NBAAdvWeeklyPlayerStat>(this.detach_NBAAdvWeeklyPlayerStats));
			this._NBAWeeklyPlayerStats = new EntitySet<NBAWeeklyPlayerStat>(new Action<NBAWeeklyPlayerStat>(this.attach_NBAWeeklyPlayerStats), new Action<NBAWeeklyPlayerStat>(this.detach_NBAWeeklyPlayerStats));
			this._NBAWeeklyTeamStats = new EntitySet<NBAWeeklyTeamStat>(new Action<NBAWeeklyTeamStat>(this.attach_NBAWeeklyTeamStats), new Action<NBAWeeklyTeamStat>(this.detach_NBAWeeklyTeamStats));
			this._LeagueInfo = default(EntityRef<LeagueInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string team_key
		{
			get
			{
				return this._team_key;
			}
			set
			{
				if ((this._team_key != value))
				{
					this.Onteam_keyChanging(value);
					this.SendPropertyChanging();
					this._team_key = value;
					this.SendPropertyChanged("team_key");
					this.Onteam_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", DbType="NVarChar(50)")]
		public string team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					this.Onteam_idChanging(value);
					this.SendPropertyChanging();
					this._team_id = value;
					this.SendPropertyChanged("team_id");
					this.Onteam_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_league_key", DbType="NVarChar(50)")]
		public string league_key
		{
			get
			{
				return this._league_key;
			}
			set
			{
				if ((this._league_key != value))
				{
					if (this._LeagueInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onleague_keyChanging(value);
					this.SendPropertyChanging();
					this._league_key = value;
					this.SendPropertyChanged("league_key");
					this.Onleague_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="NVarChar(50)")]
		public string manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_MatchupInfo", Storage="_MatchupInfos", ThisKey="team_key", OtherKey="team1_key")]
		public EntitySet<MatchupInfo> MatchupInfos
		{
			get
			{
				return this._MatchupInfos;
			}
			set
			{
				this._MatchupInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_MatchupInfo1", Storage="_MatchupInfos1", ThisKey="team_key", OtherKey="team2_key")]
		public EntitySet<MatchupInfo> MatchupInfos1
		{
			get
			{
				return this._MatchupInfos1;
			}
			set
			{
				this._MatchupInfos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_NBAAdvWeeklyPlayerStat", Storage="_NBAAdvWeeklyPlayerStats", ThisKey="team_key", OtherKey="team_key")]
		public EntitySet<NBAAdvWeeklyPlayerStat> NBAAdvWeeklyPlayerStats
		{
			get
			{
				return this._NBAAdvWeeklyPlayerStats;
			}
			set
			{
				this._NBAAdvWeeklyPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_NBAWeeklyPlayerStat", Storage="_NBAWeeklyPlayerStats", ThisKey="team_key", OtherKey="team_key")]
		public EntitySet<NBAWeeklyPlayerStat> NBAWeeklyPlayerStats
		{
			get
			{
				return this._NBAWeeklyPlayerStats;
			}
			set
			{
				this._NBAWeeklyPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_NBAWeeklyTeamStat", Storage="_NBAWeeklyTeamStats", ThisKey="team_key", OtherKey="team_key")]
		public EntitySet<NBAWeeklyTeamStat> NBAWeeklyTeamStats
		{
			get
			{
				return this._NBAWeeklyTeamStats;
			}
			set
			{
				this._NBAWeeklyTeamStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_TeamInfo", Storage="_LeagueInfo", ThisKey="league_key", OtherKey="league_key", IsForeignKey=true)]
		public LeagueInfo LeagueInfo
		{
			get
			{
				return this._LeagueInfo.Entity;
			}
			set
			{
				LeagueInfo previousValue = this._LeagueInfo.Entity;
				if (((previousValue != value) 
							|| (this._LeagueInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeagueInfo.Entity = null;
						previousValue.TeamInfos.Remove(this);
					}
					this._LeagueInfo.Entity = value;
					if ((value != null))
					{
						value.TeamInfos.Add(this);
						this._league_key = value.league_key;
					}
					else
					{
						this._league_key = default(string);
					}
					this.SendPropertyChanged("LeagueInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatchupInfos(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = this;
		}
		
		private void detach_MatchupInfos(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = null;
		}
		
		private void attach_MatchupInfos1(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo1 = this;
		}
		
		private void detach_MatchupInfos1(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo1 = null;
		}
		
		private void attach_NBAAdvWeeklyPlayerStats(NBAAdvWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = this;
		}
		
		private void detach_NBAAdvWeeklyPlayerStats(NBAAdvWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = null;
		}
		
		private void attach_NBAWeeklyPlayerStats(NBAWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = this;
		}
		
		private void detach_NBAWeeklyPlayerStats(NBAWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = null;
		}
		
		private void attach_NBAWeeklyTeamStats(NBAWeeklyTeamStat entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = this;
		}
		
		private void detach_NBAWeeklyTeamStats(NBAWeeklyTeamStat entity)
		{
			this.SendPropertyChanging();
			entity.TeamInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerInfo")]
	public partial class PlayerInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _player_key;
		
		private string _player_id;
		
		private string _game_key;
		
		private string _first_name;
		
		private string _last_name;
		
		private EntitySet<NBAAdvTotalPlayerStat> _NBAAdvTotalPlayerStats;
		
		private EntitySet<NBAAdvWeeklyPlayerStat> _NBAAdvWeeklyPlayerStats;
		
		private EntitySet<NBAWeeklyPlayerStat> _NBAWeeklyPlayerStats;
		
		private EntityRef<GameInfo> _GameInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplayer_keyChanging(string value);
    partial void Onplayer_keyChanged();
    partial void Onplayer_idChanging(string value);
    partial void Onplayer_idChanged();
    partial void Ongame_keyChanging(string value);
    partial void Ongame_keyChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    #endregion
		
		public PlayerInfo()
		{
			this._NBAAdvTotalPlayerStats = new EntitySet<NBAAdvTotalPlayerStat>(new Action<NBAAdvTotalPlayerStat>(this.attach_NBAAdvTotalPlayerStats), new Action<NBAAdvTotalPlayerStat>(this.detach_NBAAdvTotalPlayerStats));
			this._NBAAdvWeeklyPlayerStats = new EntitySet<NBAAdvWeeklyPlayerStat>(new Action<NBAAdvWeeklyPlayerStat>(this.attach_NBAAdvWeeklyPlayerStats), new Action<NBAAdvWeeklyPlayerStat>(this.detach_NBAAdvWeeklyPlayerStats));
			this._NBAWeeklyPlayerStats = new EntitySet<NBAWeeklyPlayerStat>(new Action<NBAWeeklyPlayerStat>(this.attach_NBAWeeklyPlayerStats), new Action<NBAWeeklyPlayerStat>(this.detach_NBAWeeklyPlayerStats));
			this._GameInfo = default(EntityRef<GameInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string player_key
		{
			get
			{
				return this._player_key;
			}
			set
			{
				if ((this._player_key != value))
				{
					this.Onplayer_keyChanging(value);
					this.SendPropertyChanging();
					this._player_key = value;
					this.SendPropertyChanged("player_key");
					this.Onplayer_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_id", DbType="NVarChar(50)")]
		public string player_id
		{
			get
			{
				return this._player_id;
			}
			set
			{
				if ((this._player_id != value))
				{
					this.Onplayer_idChanging(value);
					this.SendPropertyChanging();
					this._player_id = value;
					this.SendPropertyChanged("player_id");
					this.Onplayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_key", DbType="NVarChar(50)")]
		public string game_key
		{
			get
			{
				return this._game_key;
			}
			set
			{
				if ((this._game_key != value))
				{
					if (this._GameInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongame_keyChanging(value);
					this.SendPropertyChanging();
					this._game_key = value;
					this.SendPropertyChanged("game_key");
					this.Ongame_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayerInfo_NBAAdvTotalPlayerStat", Storage="_NBAAdvTotalPlayerStats", ThisKey="player_key", OtherKey="player_key")]
		public EntitySet<NBAAdvTotalPlayerStat> NBAAdvTotalPlayerStats
		{
			get
			{
				return this._NBAAdvTotalPlayerStats;
			}
			set
			{
				this._NBAAdvTotalPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayerInfo_NBAAdvWeeklyPlayerStat", Storage="_NBAAdvWeeklyPlayerStats", ThisKey="player_key", OtherKey="player_key")]
		public EntitySet<NBAAdvWeeklyPlayerStat> NBAAdvWeeklyPlayerStats
		{
			get
			{
				return this._NBAAdvWeeklyPlayerStats;
			}
			set
			{
				this._NBAAdvWeeklyPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayerInfo_NBAWeeklyPlayerStat", Storage="_NBAWeeklyPlayerStats", ThisKey="player_key", OtherKey="player_key")]
		public EntitySet<NBAWeeklyPlayerStat> NBAWeeklyPlayerStats
		{
			get
			{
				return this._NBAWeeklyPlayerStats;
			}
			set
			{
				this._NBAWeeklyPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GameInfo_PlayerInfo", Storage="_GameInfo", ThisKey="game_key", OtherKey="game_key", IsForeignKey=true)]
		public GameInfo GameInfo
		{
			get
			{
				return this._GameInfo.Entity;
			}
			set
			{
				GameInfo previousValue = this._GameInfo.Entity;
				if (((previousValue != value) 
							|| (this._GameInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GameInfo.Entity = null;
						previousValue.PlayerInfos.Remove(this);
					}
					this._GameInfo.Entity = value;
					if ((value != null))
					{
						value.PlayerInfos.Add(this);
						this._game_key = value.game_key;
					}
					else
					{
						this._game_key = default(string);
					}
					this.SendPropertyChanged("GameInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NBAAdvTotalPlayerStats(NBAAdvTotalPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.PlayerInfo = this;
		}
		
		private void detach_NBAAdvTotalPlayerStats(NBAAdvTotalPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.PlayerInfo = null;
		}
		
		private void attach_NBAAdvWeeklyPlayerStats(NBAAdvWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.PlayerInfo = this;
		}
		
		private void detach_NBAAdvWeeklyPlayerStats(NBAAdvWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.PlayerInfo = null;
		}
		
		private void attach_NBAWeeklyPlayerStats(NBAWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.PlayerInfo = this;
		}
		
		private void detach_NBAWeeklyPlayerStats(NBAWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.PlayerInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NBAAdvTotalPlayerStats")]
	public partial class NBAAdvTotalPlayerStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _player_key;
		
		private string _league_key;
		
		private System.Nullable<int> _weeks_started;
		
		private System.Nullable<decimal> _total_ppg_pct;
		
		private System.Nullable<decimal> _total_rpg_pct;
		
		private System.Nullable<decimal> _total_apg_pct;
		
		private System.Nullable<decimal> _total_spg_pct;
		
		private System.Nullable<decimal> _total_bpg_pct;
		
		private System.Nullable<decimal> _total_pct_contribution;
		
		private System.Nullable<decimal> _total_points_win;
		
		private System.Nullable<decimal> _total_rebounds_win;
		
		private System.Nullable<decimal> _total_assists_win;
		
		private System.Nullable<decimal> _total_steals_win;
		
		private System.Nullable<decimal> _total_blocks_win;
		
		private System.Nullable<decimal> _total_wins;
		
		private System.Nullable<decimal> _total_win_ppg_pct;
		
		private System.Nullable<decimal> _total_win_rpg_pct;
		
		private System.Nullable<decimal> _total_win_apg_pct;
		
		private System.Nullable<decimal> _total_win_spg_pct;
		
		private System.Nullable<decimal> _total_win_bpg_pct;
		
		private System.Nullable<decimal> _total_win_pct_contribution;
		
		private System.Nullable<decimal> _win_pct_contribution_per_week;
		
		private System.Nullable<decimal> _pct_contribution_per_win;
		
		private System.Nullable<decimal> _player_win_pct;
		
		private EntityRef<LeagueInfo> _LeagueInfo;
		
		private EntityRef<PlayerInfo> _PlayerInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onplayer_keyChanging(string value);
    partial void Onplayer_keyChanged();
    partial void Onleague_keyChanging(string value);
    partial void Onleague_keyChanged();
    partial void Onweeks_startedChanging(System.Nullable<int> value);
    partial void Onweeks_startedChanged();
    partial void Ontotal_ppg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_ppg_pctChanged();
    partial void Ontotal_rpg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_rpg_pctChanged();
    partial void Ontotal_apg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_apg_pctChanged();
    partial void Ontotal_spg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_spg_pctChanged();
    partial void Ontotal_bpg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_bpg_pctChanged();
    partial void Ontotal_pct_contributionChanging(System.Nullable<decimal> value);
    partial void Ontotal_pct_contributionChanged();
    partial void Ontotal_points_winChanging(System.Nullable<decimal> value);
    partial void Ontotal_points_winChanged();
    partial void Ontotal_rebounds_winChanging(System.Nullable<decimal> value);
    partial void Ontotal_rebounds_winChanged();
    partial void Ontotal_assists_winChanging(System.Nullable<decimal> value);
    partial void Ontotal_assists_winChanged();
    partial void Ontotal_steals_winChanging(System.Nullable<decimal> value);
    partial void Ontotal_steals_winChanged();
    partial void Ontotal_blocks_winChanging(System.Nullable<decimal> value);
    partial void Ontotal_blocks_winChanged();
    partial void Ontotal_winsChanging(System.Nullable<decimal> value);
    partial void Ontotal_winsChanged();
    partial void Ontotal_win_ppg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_win_ppg_pctChanged();
    partial void Ontotal_win_rpg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_win_rpg_pctChanged();
    partial void Ontotal_win_apg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_win_apg_pctChanged();
    partial void Ontotal_win_spg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_win_spg_pctChanged();
    partial void Ontotal_win_bpg_pctChanging(System.Nullable<decimal> value);
    partial void Ontotal_win_bpg_pctChanged();
    partial void Ontotal_win_pct_contributionChanging(System.Nullable<decimal> value);
    partial void Ontotal_win_pct_contributionChanged();
    partial void Onwin_pct_contribution_per_weekChanging(System.Nullable<decimal> value);
    partial void Onwin_pct_contribution_per_weekChanged();
    partial void Onpct_contribution_per_winChanging(System.Nullable<decimal> value);
    partial void Onpct_contribution_per_winChanged();
    partial void Onplayer_win_pctChanging(System.Nullable<decimal> value);
    partial void Onplayer_win_pctChanged();
    #endregion
		
		public NBAAdvTotalPlayerStat()
		{
			this._LeagueInfo = default(EntityRef<LeagueInfo>);
			this._PlayerInfo = default(EntityRef<PlayerInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_key", DbType="NVarChar(50)")]
		public string player_key
		{
			get
			{
				return this._player_key;
			}
			set
			{
				if ((this._player_key != value))
				{
					if (this._PlayerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplayer_keyChanging(value);
					this.SendPropertyChanging();
					this._player_key = value;
					this.SendPropertyChanged("player_key");
					this.Onplayer_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_league_key", DbType="NVarChar(50)")]
		public string league_key
		{
			get
			{
				return this._league_key;
			}
			set
			{
				if ((this._league_key != value))
				{
					if (this._LeagueInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onleague_keyChanging(value);
					this.SendPropertyChanging();
					this._league_key = value;
					this.SendPropertyChanged("league_key");
					this.Onleague_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weeks_started", DbType="Int")]
		public System.Nullable<int> weeks_started
		{
			get
			{
				return this._weeks_started;
			}
			set
			{
				if ((this._weeks_started != value))
				{
					this.Onweeks_startedChanging(value);
					this.SendPropertyChanging();
					this._weeks_started = value;
					this.SendPropertyChanged("weeks_started");
					this.Onweeks_startedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_ppg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_ppg_pct
		{
			get
			{
				return this._total_ppg_pct;
			}
			set
			{
				if ((this._total_ppg_pct != value))
				{
					this.Ontotal_ppg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_ppg_pct = value;
					this.SendPropertyChanged("total_ppg_pct");
					this.Ontotal_ppg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_rpg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_rpg_pct
		{
			get
			{
				return this._total_rpg_pct;
			}
			set
			{
				if ((this._total_rpg_pct != value))
				{
					this.Ontotal_rpg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_rpg_pct = value;
					this.SendPropertyChanged("total_rpg_pct");
					this.Ontotal_rpg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_apg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_apg_pct
		{
			get
			{
				return this._total_apg_pct;
			}
			set
			{
				if ((this._total_apg_pct != value))
				{
					this.Ontotal_apg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_apg_pct = value;
					this.SendPropertyChanged("total_apg_pct");
					this.Ontotal_apg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_spg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_spg_pct
		{
			get
			{
				return this._total_spg_pct;
			}
			set
			{
				if ((this._total_spg_pct != value))
				{
					this.Ontotal_spg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_spg_pct = value;
					this.SendPropertyChanged("total_spg_pct");
					this.Ontotal_spg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_bpg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_bpg_pct
		{
			get
			{
				return this._total_bpg_pct;
			}
			set
			{
				if ((this._total_bpg_pct != value))
				{
					this.Ontotal_bpg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_bpg_pct = value;
					this.SendPropertyChanged("total_bpg_pct");
					this.Ontotal_bpg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_pct_contribution", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_pct_contribution
		{
			get
			{
				return this._total_pct_contribution;
			}
			set
			{
				if ((this._total_pct_contribution != value))
				{
					this.Ontotal_pct_contributionChanging(value);
					this.SendPropertyChanging();
					this._total_pct_contribution = value;
					this.SendPropertyChanged("total_pct_contribution");
					this.Ontotal_pct_contributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_points_win", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> total_points_win
		{
			get
			{
				return this._total_points_win;
			}
			set
			{
				if ((this._total_points_win != value))
				{
					this.Ontotal_points_winChanging(value);
					this.SendPropertyChanging();
					this._total_points_win = value;
					this.SendPropertyChanged("total_points_win");
					this.Ontotal_points_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_rebounds_win", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> total_rebounds_win
		{
			get
			{
				return this._total_rebounds_win;
			}
			set
			{
				if ((this._total_rebounds_win != value))
				{
					this.Ontotal_rebounds_winChanging(value);
					this.SendPropertyChanging();
					this._total_rebounds_win = value;
					this.SendPropertyChanged("total_rebounds_win");
					this.Ontotal_rebounds_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_assists_win", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> total_assists_win
		{
			get
			{
				return this._total_assists_win;
			}
			set
			{
				if ((this._total_assists_win != value))
				{
					this.Ontotal_assists_winChanging(value);
					this.SendPropertyChanging();
					this._total_assists_win = value;
					this.SendPropertyChanged("total_assists_win");
					this.Ontotal_assists_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_steals_win", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> total_steals_win
		{
			get
			{
				return this._total_steals_win;
			}
			set
			{
				if ((this._total_steals_win != value))
				{
					this.Ontotal_steals_winChanging(value);
					this.SendPropertyChanging();
					this._total_steals_win = value;
					this.SendPropertyChanged("total_steals_win");
					this.Ontotal_steals_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_blocks_win", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> total_blocks_win
		{
			get
			{
				return this._total_blocks_win;
			}
			set
			{
				if ((this._total_blocks_win != value))
				{
					this.Ontotal_blocks_winChanging(value);
					this.SendPropertyChanging();
					this._total_blocks_win = value;
					this.SendPropertyChanged("total_blocks_win");
					this.Ontotal_blocks_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_wins", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> total_wins
		{
			get
			{
				return this._total_wins;
			}
			set
			{
				if ((this._total_wins != value))
				{
					this.Ontotal_winsChanging(value);
					this.SendPropertyChanging();
					this._total_wins = value;
					this.SendPropertyChanged("total_wins");
					this.Ontotal_winsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_win_ppg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_win_ppg_pct
		{
			get
			{
				return this._total_win_ppg_pct;
			}
			set
			{
				if ((this._total_win_ppg_pct != value))
				{
					this.Ontotal_win_ppg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_win_ppg_pct = value;
					this.SendPropertyChanged("total_win_ppg_pct");
					this.Ontotal_win_ppg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_win_rpg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_win_rpg_pct
		{
			get
			{
				return this._total_win_rpg_pct;
			}
			set
			{
				if ((this._total_win_rpg_pct != value))
				{
					this.Ontotal_win_rpg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_win_rpg_pct = value;
					this.SendPropertyChanged("total_win_rpg_pct");
					this.Ontotal_win_rpg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_win_apg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_win_apg_pct
		{
			get
			{
				return this._total_win_apg_pct;
			}
			set
			{
				if ((this._total_win_apg_pct != value))
				{
					this.Ontotal_win_apg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_win_apg_pct = value;
					this.SendPropertyChanged("total_win_apg_pct");
					this.Ontotal_win_apg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_win_spg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_win_spg_pct
		{
			get
			{
				return this._total_win_spg_pct;
			}
			set
			{
				if ((this._total_win_spg_pct != value))
				{
					this.Ontotal_win_spg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_win_spg_pct = value;
					this.SendPropertyChanged("total_win_spg_pct");
					this.Ontotal_win_spg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_win_bpg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_win_bpg_pct
		{
			get
			{
				return this._total_win_bpg_pct;
			}
			set
			{
				if ((this._total_win_bpg_pct != value))
				{
					this.Ontotal_win_bpg_pctChanging(value);
					this.SendPropertyChanging();
					this._total_win_bpg_pct = value;
					this.SendPropertyChanged("total_win_bpg_pct");
					this.Ontotal_win_bpg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_win_pct_contribution", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_win_pct_contribution
		{
			get
			{
				return this._total_win_pct_contribution;
			}
			set
			{
				if ((this._total_win_pct_contribution != value))
				{
					this.Ontotal_win_pct_contributionChanging(value);
					this.SendPropertyChanging();
					this._total_win_pct_contribution = value;
					this.SendPropertyChanged("total_win_pct_contribution");
					this.Ontotal_win_pct_contributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_win_pct_contribution_per_week", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> win_pct_contribution_per_week
		{
			get
			{
				return this._win_pct_contribution_per_week;
			}
			set
			{
				if ((this._win_pct_contribution_per_week != value))
				{
					this.Onwin_pct_contribution_per_weekChanging(value);
					this.SendPropertyChanging();
					this._win_pct_contribution_per_week = value;
					this.SendPropertyChanged("win_pct_contribution_per_week");
					this.Onwin_pct_contribution_per_weekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pct_contribution_per_win", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> pct_contribution_per_win
		{
			get
			{
				return this._pct_contribution_per_win;
			}
			set
			{
				if ((this._pct_contribution_per_win != value))
				{
					this.Onpct_contribution_per_winChanging(value);
					this.SendPropertyChanging();
					this._pct_contribution_per_win = value;
					this.SendPropertyChanged("pct_contribution_per_win");
					this.Onpct_contribution_per_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_win_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> player_win_pct
		{
			get
			{
				return this._player_win_pct;
			}
			set
			{
				if ((this._player_win_pct != value))
				{
					this.Onplayer_win_pctChanging(value);
					this.SendPropertyChanging();
					this._player_win_pct = value;
					this.SendPropertyChanged("player_win_pct");
					this.Onplayer_win_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_NBAAdvTotalPlayerStat", Storage="_LeagueInfo", ThisKey="league_key", OtherKey="league_key", IsForeignKey=true)]
		public LeagueInfo LeagueInfo
		{
			get
			{
				return this._LeagueInfo.Entity;
			}
			set
			{
				LeagueInfo previousValue = this._LeagueInfo.Entity;
				if (((previousValue != value) 
							|| (this._LeagueInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeagueInfo.Entity = null;
						previousValue.NBAAdvTotalPlayerStats.Remove(this);
					}
					this._LeagueInfo.Entity = value;
					if ((value != null))
					{
						value.NBAAdvTotalPlayerStats.Add(this);
						this._league_key = value.league_key;
					}
					else
					{
						this._league_key = default(string);
					}
					this.SendPropertyChanged("LeagueInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayerInfo_NBAAdvTotalPlayerStat", Storage="_PlayerInfo", ThisKey="player_key", OtherKey="player_key", IsForeignKey=true)]
		public PlayerInfo PlayerInfo
		{
			get
			{
				return this._PlayerInfo.Entity;
			}
			set
			{
				PlayerInfo previousValue = this._PlayerInfo.Entity;
				if (((previousValue != value) 
							|| (this._PlayerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlayerInfo.Entity = null;
						previousValue.NBAAdvTotalPlayerStats.Remove(this);
					}
					this._PlayerInfo.Entity = value;
					if ((value != null))
					{
						value.NBAAdvTotalPlayerStats.Add(this);
						this._player_key = value.player_key;
					}
					else
					{
						this._player_key = default(string);
					}
					this.SendPropertyChanged("PlayerInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeekInfo")]
	public partial class WeekInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _league_key;
		
		private int _week;
		
		private bool _isShortWeek;
		
		private bool _isLongWeek;
		
		private bool _isPlayoffs;
		
		private bool _isConsolation;
		
		private System.DateTime _startDate;
		
		private System.DateTime _endDate;
		
		private System.Nullable<System.DateTime> _lastLoadDate;
		
		private EntitySet<MatchupInfo> _MatchupInfos;
		
		private EntitySet<NBAAdvWeeklyPlayerStat> _NBAAdvWeeklyPlayerStats;
		
		private EntitySet<NBAWeeklyPlayerStat> _NBAWeeklyPlayerStats;
		
		private EntitySet<NBAWeeklyTeamStat> _NBAWeeklyTeamStats;
		
		private EntityRef<LeagueInfo> _LeagueInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onleague_keyChanging(string value);
    partial void Onleague_keyChanged();
    partial void OnweekChanging(int value);
    partial void OnweekChanged();
    partial void OnisShortWeekChanging(bool value);
    partial void OnisShortWeekChanged();
    partial void OnisLongWeekChanging(bool value);
    partial void OnisLongWeekChanged();
    partial void OnisPlayoffsChanging(bool value);
    partial void OnisPlayoffsChanged();
    partial void OnisConsolationChanging(bool value);
    partial void OnisConsolationChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.DateTime value);
    partial void OnendDateChanged();
    partial void OnlastLoadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastLoadDateChanged();
    #endregion
		
		public WeekInfo()
		{
			this._MatchupInfos = new EntitySet<MatchupInfo>(new Action<MatchupInfo>(this.attach_MatchupInfos), new Action<MatchupInfo>(this.detach_MatchupInfos));
			this._NBAAdvWeeklyPlayerStats = new EntitySet<NBAAdvWeeklyPlayerStat>(new Action<NBAAdvWeeklyPlayerStat>(this.attach_NBAAdvWeeklyPlayerStats), new Action<NBAAdvWeeklyPlayerStat>(this.detach_NBAAdvWeeklyPlayerStats));
			this._NBAWeeklyPlayerStats = new EntitySet<NBAWeeklyPlayerStat>(new Action<NBAWeeklyPlayerStat>(this.attach_NBAWeeklyPlayerStats), new Action<NBAWeeklyPlayerStat>(this.detach_NBAWeeklyPlayerStats));
			this._NBAWeeklyTeamStats = new EntitySet<NBAWeeklyTeamStat>(new Action<NBAWeeklyTeamStat>(this.attach_NBAWeeklyTeamStats), new Action<NBAWeeklyTeamStat>(this.detach_NBAWeeklyTeamStats));
			this._LeagueInfo = default(EntityRef<LeagueInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_league_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string league_key
		{
			get
			{
				return this._league_key;
			}
			set
			{
				if ((this._league_key != value))
				{
					if (this._LeagueInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onleague_keyChanging(value);
					this.SendPropertyChanging();
					this._league_key = value;
					this.SendPropertyChanged("league_key");
					this.Onleague_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week", DbType="Int NOT NULL")]
		public int week
		{
			get
			{
				return this._week;
			}
			set
			{
				if ((this._week != value))
				{
					this.OnweekChanging(value);
					this.SendPropertyChanging();
					this._week = value;
					this.SendPropertyChanged("week");
					this.OnweekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isShortWeek", DbType="Bit NOT NULL")]
		public bool isShortWeek
		{
			get
			{
				return this._isShortWeek;
			}
			set
			{
				if ((this._isShortWeek != value))
				{
					this.OnisShortWeekChanging(value);
					this.SendPropertyChanging();
					this._isShortWeek = value;
					this.SendPropertyChanged("isShortWeek");
					this.OnisShortWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLongWeek", DbType="Bit NOT NULL")]
		public bool isLongWeek
		{
			get
			{
				return this._isLongWeek;
			}
			set
			{
				if ((this._isLongWeek != value))
				{
					this.OnisLongWeekChanging(value);
					this.SendPropertyChanging();
					this._isLongWeek = value;
					this.SendPropertyChanged("isLongWeek");
					this.OnisLongWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPlayoffs", DbType="Bit NOT NULL")]
		public bool isPlayoffs
		{
			get
			{
				return this._isPlayoffs;
			}
			set
			{
				if ((this._isPlayoffs != value))
				{
					this.OnisPlayoffsChanging(value);
					this.SendPropertyChanging();
					this._isPlayoffs = value;
					this.SendPropertyChanged("isPlayoffs");
					this.OnisPlayoffsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isConsolation", DbType="Bit NOT NULL")]
		public bool isConsolation
		{
			get
			{
				return this._isConsolation;
			}
			set
			{
				if ((this._isConsolation != value))
				{
					this.OnisConsolationChanging(value);
					this.SendPropertyChanging();
					this._isConsolation = value;
					this.SendPropertyChanged("isConsolation");
					this.OnisConsolationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="Date NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="Date NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoadDate", DbType="Date")]
		public System.Nullable<System.DateTime> lastLoadDate
		{
			get
			{
				return this._lastLoadDate;
			}
			set
			{
				if ((this._lastLoadDate != value))
				{
					this.OnlastLoadDateChanging(value);
					this.SendPropertyChanging();
					this._lastLoadDate = value;
					this.SendPropertyChanged("lastLoadDate");
					this.OnlastLoadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_MatchupInfo", Storage="_MatchupInfos", ThisKey="id", OtherKey="week_id")]
		public EntitySet<MatchupInfo> MatchupInfos
		{
			get
			{
				return this._MatchupInfos;
			}
			set
			{
				this._MatchupInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_NBAAdvWeeklyPlayerStat", Storage="_NBAAdvWeeklyPlayerStats", ThisKey="id", OtherKey="week_id")]
		public EntitySet<NBAAdvWeeklyPlayerStat> NBAAdvWeeklyPlayerStats
		{
			get
			{
				return this._NBAAdvWeeklyPlayerStats;
			}
			set
			{
				this._NBAAdvWeeklyPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_NBAWeeklyPlayerStat", Storage="_NBAWeeklyPlayerStats", ThisKey="id", OtherKey="week_id")]
		public EntitySet<NBAWeeklyPlayerStat> NBAWeeklyPlayerStats
		{
			get
			{
				return this._NBAWeeklyPlayerStats;
			}
			set
			{
				this._NBAWeeklyPlayerStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_NBAWeeklyTeamStat", Storage="_NBAWeeklyTeamStats", ThisKey="id", OtherKey="week_id")]
		public EntitySet<NBAWeeklyTeamStat> NBAWeeklyTeamStats
		{
			get
			{
				return this._NBAWeeklyTeamStats;
			}
			set
			{
				this._NBAWeeklyTeamStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_WeekInfo", Storage="_LeagueInfo", ThisKey="league_key", OtherKey="league_key", IsForeignKey=true)]
		public LeagueInfo LeagueInfo
		{
			get
			{
				return this._LeagueInfo.Entity;
			}
			set
			{
				LeagueInfo previousValue = this._LeagueInfo.Entity;
				if (((previousValue != value) 
							|| (this._LeagueInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeagueInfo.Entity = null;
						previousValue.WeekInfos.Remove(this);
					}
					this._LeagueInfo.Entity = value;
					if ((value != null))
					{
						value.WeekInfos.Add(this);
						this._league_key = value.league_key;
					}
					else
					{
						this._league_key = default(string);
					}
					this.SendPropertyChanged("LeagueInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatchupInfos(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = this;
		}
		
		private void detach_MatchupInfos(MatchupInfo entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = null;
		}
		
		private void attach_NBAAdvWeeklyPlayerStats(NBAAdvWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = this;
		}
		
		private void detach_NBAAdvWeeklyPlayerStats(NBAAdvWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = null;
		}
		
		private void attach_NBAWeeklyPlayerStats(NBAWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = this;
		}
		
		private void detach_NBAWeeklyPlayerStats(NBAWeeklyPlayerStat entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = null;
		}
		
		private void attach_NBAWeeklyTeamStats(NBAWeeklyTeamStat entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = this;
		}
		
		private void detach_NBAWeeklyTeamStats(NBAWeeklyTeamStat entity)
		{
			this.SendPropertyChanging();
			entity.WeekInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatchupInfo")]
	public partial class MatchupInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _week_id;
		
		private string _league_key;
		
		private string _team1_key;
		
		private string _team2_key;
		
		private EntityRef<LeagueInfo> _LeagueInfo;
		
		private EntityRef<TeamInfo> _TeamInfo;
		
		private EntityRef<TeamInfo> _TeamInfo1;
		
		private EntityRef<WeekInfo> _WeekInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onweek_idChanging(int value);
    partial void Onweek_idChanged();
    partial void Onleague_keyChanging(string value);
    partial void Onleague_keyChanged();
    partial void Onteam1_keyChanging(string value);
    partial void Onteam1_keyChanged();
    partial void Onteam2_keyChanging(string value);
    partial void Onteam2_keyChanged();
    #endregion
		
		public MatchupInfo()
		{
			this._LeagueInfo = default(EntityRef<LeagueInfo>);
			this._TeamInfo = default(EntityRef<TeamInfo>);
			this._TeamInfo1 = default(EntityRef<TeamInfo>);
			this._WeekInfo = default(EntityRef<WeekInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_id", DbType="Int NOT NULL")]
		public int week_id
		{
			get
			{
				return this._week_id;
			}
			set
			{
				if ((this._week_id != value))
				{
					if (this._WeekInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweek_idChanging(value);
					this.SendPropertyChanging();
					this._week_id = value;
					this.SendPropertyChanged("week_id");
					this.Onweek_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_league_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string league_key
		{
			get
			{
				return this._league_key;
			}
			set
			{
				if ((this._league_key != value))
				{
					if (this._LeagueInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onleague_keyChanging(value);
					this.SendPropertyChanging();
					this._league_key = value;
					this.SendPropertyChanged("league_key");
					this.Onleague_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team1_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string team1_key
		{
			get
			{
				return this._team1_key;
			}
			set
			{
				if ((this._team1_key != value))
				{
					if (this._TeamInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam1_keyChanging(value);
					this.SendPropertyChanging();
					this._team1_key = value;
					this.SendPropertyChanged("team1_key");
					this.Onteam1_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team2_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string team2_key
		{
			get
			{
				return this._team2_key;
			}
			set
			{
				if ((this._team2_key != value))
				{
					if (this._TeamInfo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam2_keyChanging(value);
					this.SendPropertyChanging();
					this._team2_key = value;
					this.SendPropertyChanged("team2_key");
					this.Onteam2_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LeagueInfo_MatchupInfo", Storage="_LeagueInfo", ThisKey="league_key", OtherKey="league_key", IsForeignKey=true)]
		public LeagueInfo LeagueInfo
		{
			get
			{
				return this._LeagueInfo.Entity;
			}
			set
			{
				LeagueInfo previousValue = this._LeagueInfo.Entity;
				if (((previousValue != value) 
							|| (this._LeagueInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LeagueInfo.Entity = null;
						previousValue.MatchupInfos.Remove(this);
					}
					this._LeagueInfo.Entity = value;
					if ((value != null))
					{
						value.MatchupInfos.Add(this);
						this._league_key = value.league_key;
					}
					else
					{
						this._league_key = default(string);
					}
					this.SendPropertyChanged("LeagueInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_MatchupInfo", Storage="_TeamInfo", ThisKey="team1_key", OtherKey="team_key", IsForeignKey=true)]
		public TeamInfo TeamInfo
		{
			get
			{
				return this._TeamInfo.Entity;
			}
			set
			{
				TeamInfo previousValue = this._TeamInfo.Entity;
				if (((previousValue != value) 
							|| (this._TeamInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamInfo.Entity = null;
						previousValue.MatchupInfos.Remove(this);
					}
					this._TeamInfo.Entity = value;
					if ((value != null))
					{
						value.MatchupInfos.Add(this);
						this._team1_key = value.team_key;
					}
					else
					{
						this._team1_key = default(string);
					}
					this.SendPropertyChanged("TeamInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_MatchupInfo1", Storage="_TeamInfo1", ThisKey="team2_key", OtherKey="team_key", IsForeignKey=true)]
		public TeamInfo TeamInfo1
		{
			get
			{
				return this._TeamInfo1.Entity;
			}
			set
			{
				TeamInfo previousValue = this._TeamInfo1.Entity;
				if (((previousValue != value) 
							|| (this._TeamInfo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamInfo1.Entity = null;
						previousValue.MatchupInfos1.Remove(this);
					}
					this._TeamInfo1.Entity = value;
					if ((value != null))
					{
						value.MatchupInfos1.Add(this);
						this._team2_key = value.team_key;
					}
					else
					{
						this._team2_key = default(string);
					}
					this.SendPropertyChanged("TeamInfo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_MatchupInfo", Storage="_WeekInfo", ThisKey="week_id", OtherKey="id", IsForeignKey=true)]
		public WeekInfo WeekInfo
		{
			get
			{
				return this._WeekInfo.Entity;
			}
			set
			{
				WeekInfo previousValue = this._WeekInfo.Entity;
				if (((previousValue != value) 
							|| (this._WeekInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeekInfo.Entity = null;
						previousValue.MatchupInfos.Remove(this);
					}
					this._WeekInfo.Entity = value;
					if ((value != null))
					{
						value.MatchupInfos.Add(this);
						this._week_id = value.id;
					}
					else
					{
						this._week_id = default(int);
					}
					this.SendPropertyChanged("WeekInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NBAAdvWeeklyPlayerStats")]
	public partial class NBAAdvWeeklyPlayerStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _player_key;
		
		private string _team_key;
		
		private System.Nullable<int> _week_id;
		
		private System.Nullable<decimal> _ppg_pct;
		
		private System.Nullable<decimal> _rpg_pct;
		
		private System.Nullable<decimal> _apg_pct;
		
		private System.Nullable<decimal> _spg_pct;
		
		private System.Nullable<decimal> _bpg_pct;
		
		private System.Nullable<decimal> _pct_contribution;
		
		private System.Nullable<decimal> _win_pct_contribution;
		
		private System.Nullable<decimal> _pct_contribution_of_wins;
		
		private EntityRef<PlayerInfo> _PlayerInfo;
		
		private EntityRef<TeamInfo> _TeamInfo;
		
		private EntityRef<WeekInfo> _WeekInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onplayer_keyChanging(string value);
    partial void Onplayer_keyChanged();
    partial void Onteam_keyChanging(string value);
    partial void Onteam_keyChanged();
    partial void Onweek_idChanging(System.Nullable<int> value);
    partial void Onweek_idChanged();
    partial void Onppg_pctChanging(System.Nullable<decimal> value);
    partial void Onppg_pctChanged();
    partial void Onrpg_pctChanging(System.Nullable<decimal> value);
    partial void Onrpg_pctChanged();
    partial void Onapg_pctChanging(System.Nullable<decimal> value);
    partial void Onapg_pctChanged();
    partial void Onspg_pctChanging(System.Nullable<decimal> value);
    partial void Onspg_pctChanged();
    partial void Onbpg_pctChanging(System.Nullable<decimal> value);
    partial void Onbpg_pctChanged();
    partial void Onpct_contributionChanging(System.Nullable<decimal> value);
    partial void Onpct_contributionChanged();
    partial void Onwin_pct_contributionChanging(System.Nullable<decimal> value);
    partial void Onwin_pct_contributionChanged();
    partial void Onpct_contribution_of_winsChanging(System.Nullable<decimal> value);
    partial void Onpct_contribution_of_winsChanged();
    #endregion
		
		public NBAAdvWeeklyPlayerStat()
		{
			this._PlayerInfo = default(EntityRef<PlayerInfo>);
			this._TeamInfo = default(EntityRef<TeamInfo>);
			this._WeekInfo = default(EntityRef<WeekInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_key", DbType="NVarChar(50)")]
		public string player_key
		{
			get
			{
				return this._player_key;
			}
			set
			{
				if ((this._player_key != value))
				{
					if (this._PlayerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplayer_keyChanging(value);
					this.SendPropertyChanging();
					this._player_key = value;
					this.SendPropertyChanged("player_key");
					this.Onplayer_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_key", DbType="NVarChar(50)")]
		public string team_key
		{
			get
			{
				return this._team_key;
			}
			set
			{
				if ((this._team_key != value))
				{
					if (this._TeamInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam_keyChanging(value);
					this.SendPropertyChanging();
					this._team_key = value;
					this.SendPropertyChanged("team_key");
					this.Onteam_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_id", DbType="Int")]
		public System.Nullable<int> week_id
		{
			get
			{
				return this._week_id;
			}
			set
			{
				if ((this._week_id != value))
				{
					if (this._WeekInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweek_idChanging(value);
					this.SendPropertyChanging();
					this._week_id = value;
					this.SendPropertyChanged("week_id");
					this.Onweek_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ppg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ppg_pct
		{
			get
			{
				return this._ppg_pct;
			}
			set
			{
				if ((this._ppg_pct != value))
				{
					this.Onppg_pctChanging(value);
					this.SendPropertyChanging();
					this._ppg_pct = value;
					this.SendPropertyChanged("ppg_pct");
					this.Onppg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rpg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> rpg_pct
		{
			get
			{
				return this._rpg_pct;
			}
			set
			{
				if ((this._rpg_pct != value))
				{
					this.Onrpg_pctChanging(value);
					this.SendPropertyChanging();
					this._rpg_pct = value;
					this.SendPropertyChanged("rpg_pct");
					this.Onrpg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> apg_pct
		{
			get
			{
				return this._apg_pct;
			}
			set
			{
				if ((this._apg_pct != value))
				{
					this.Onapg_pctChanging(value);
					this.SendPropertyChanging();
					this._apg_pct = value;
					this.SendPropertyChanged("apg_pct");
					this.Onapg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> spg_pct
		{
			get
			{
				return this._spg_pct;
			}
			set
			{
				if ((this._spg_pct != value))
				{
					this.Onspg_pctChanging(value);
					this.SendPropertyChanging();
					this._spg_pct = value;
					this.SendPropertyChanged("spg_pct");
					this.Onspg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bpg_pct", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> bpg_pct
		{
			get
			{
				return this._bpg_pct;
			}
			set
			{
				if ((this._bpg_pct != value))
				{
					this.Onbpg_pctChanging(value);
					this.SendPropertyChanging();
					this._bpg_pct = value;
					this.SendPropertyChanged("bpg_pct");
					this.Onbpg_pctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pct_contribution", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> pct_contribution
		{
			get
			{
				return this._pct_contribution;
			}
			set
			{
				if ((this._pct_contribution != value))
				{
					this.Onpct_contributionChanging(value);
					this.SendPropertyChanging();
					this._pct_contribution = value;
					this.SendPropertyChanged("pct_contribution");
					this.Onpct_contributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_win_pct_contribution", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> win_pct_contribution
		{
			get
			{
				return this._win_pct_contribution;
			}
			set
			{
				if ((this._win_pct_contribution != value))
				{
					this.Onwin_pct_contributionChanging(value);
					this.SendPropertyChanging();
					this._win_pct_contribution = value;
					this.SendPropertyChanged("win_pct_contribution");
					this.Onwin_pct_contributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pct_contribution_of_wins", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> pct_contribution_of_wins
		{
			get
			{
				return this._pct_contribution_of_wins;
			}
			set
			{
				if ((this._pct_contribution_of_wins != value))
				{
					this.Onpct_contribution_of_winsChanging(value);
					this.SendPropertyChanging();
					this._pct_contribution_of_wins = value;
					this.SendPropertyChanged("pct_contribution_of_wins");
					this.Onpct_contribution_of_winsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayerInfo_NBAAdvWeeklyPlayerStat", Storage="_PlayerInfo", ThisKey="player_key", OtherKey="player_key", IsForeignKey=true)]
		public PlayerInfo PlayerInfo
		{
			get
			{
				return this._PlayerInfo.Entity;
			}
			set
			{
				PlayerInfo previousValue = this._PlayerInfo.Entity;
				if (((previousValue != value) 
							|| (this._PlayerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlayerInfo.Entity = null;
						previousValue.NBAAdvWeeklyPlayerStats.Remove(this);
					}
					this._PlayerInfo.Entity = value;
					if ((value != null))
					{
						value.NBAAdvWeeklyPlayerStats.Add(this);
						this._player_key = value.player_key;
					}
					else
					{
						this._player_key = default(string);
					}
					this.SendPropertyChanged("PlayerInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_NBAAdvWeeklyPlayerStat", Storage="_TeamInfo", ThisKey="team_key", OtherKey="team_key", IsForeignKey=true)]
		public TeamInfo TeamInfo
		{
			get
			{
				return this._TeamInfo.Entity;
			}
			set
			{
				TeamInfo previousValue = this._TeamInfo.Entity;
				if (((previousValue != value) 
							|| (this._TeamInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamInfo.Entity = null;
						previousValue.NBAAdvWeeklyPlayerStats.Remove(this);
					}
					this._TeamInfo.Entity = value;
					if ((value != null))
					{
						value.NBAAdvWeeklyPlayerStats.Add(this);
						this._team_key = value.team_key;
					}
					else
					{
						this._team_key = default(string);
					}
					this.SendPropertyChanged("TeamInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_NBAAdvWeeklyPlayerStat", Storage="_WeekInfo", ThisKey="week_id", OtherKey="id", IsForeignKey=true)]
		public WeekInfo WeekInfo
		{
			get
			{
				return this._WeekInfo.Entity;
			}
			set
			{
				WeekInfo previousValue = this._WeekInfo.Entity;
				if (((previousValue != value) 
							|| (this._WeekInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeekInfo.Entity = null;
						previousValue.NBAAdvWeeklyPlayerStats.Remove(this);
					}
					this._WeekInfo.Entity = value;
					if ((value != null))
					{
						value.NBAAdvWeeklyPlayerStats.Add(this);
						this._week_id = value.id;
					}
					else
					{
						this._week_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("WeekInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NBAWeeklyPlayerStats")]
	public partial class NBAWeeklyPlayerStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _player_key;
		
		private string _team_key;
		
		private System.Nullable<int> _week_id;
		
		private System.Nullable<int> _games_played;
		
		private System.Nullable<int> _games_missed;
		
		private System.Nullable<int> _points;
		
		private System.Nullable<int> _rebounds;
		
		private System.Nullable<int> _assists;
		
		private System.Nullable<int> _steals;
		
		private System.Nullable<int> _blocks;
		
		private string _position;
		
		private EntityRef<PlayerInfo> _PlayerInfo;
		
		private EntityRef<TeamInfo> _TeamInfo;
		
		private EntityRef<WeekInfo> _WeekInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onplayer_keyChanging(string value);
    partial void Onplayer_keyChanged();
    partial void Onteam_keyChanging(string value);
    partial void Onteam_keyChanged();
    partial void Onweek_idChanging(System.Nullable<int> value);
    partial void Onweek_idChanged();
    partial void Ongames_playedChanging(System.Nullable<int> value);
    partial void Ongames_playedChanged();
    partial void Ongames_missedChanging(System.Nullable<int> value);
    partial void Ongames_missedChanged();
    partial void OnpointsChanging(System.Nullable<int> value);
    partial void OnpointsChanged();
    partial void OnreboundsChanging(System.Nullable<int> value);
    partial void OnreboundsChanged();
    partial void OnassistsChanging(System.Nullable<int> value);
    partial void OnassistsChanged();
    partial void OnstealsChanging(System.Nullable<int> value);
    partial void OnstealsChanged();
    partial void OnblocksChanging(System.Nullable<int> value);
    partial void OnblocksChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    #endregion
		
		public NBAWeeklyPlayerStat()
		{
			this._PlayerInfo = default(EntityRef<PlayerInfo>);
			this._TeamInfo = default(EntityRef<TeamInfo>);
			this._WeekInfo = default(EntityRef<WeekInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_key", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string player_key
		{
			get
			{
				return this._player_key;
			}
			set
			{
				if ((this._player_key != value))
				{
					if (this._PlayerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplayer_keyChanging(value);
					this.SendPropertyChanging();
					this._player_key = value;
					this.SendPropertyChanged("player_key");
					this.Onplayer_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_key", DbType="NVarChar(50)")]
		public string team_key
		{
			get
			{
				return this._team_key;
			}
			set
			{
				if ((this._team_key != value))
				{
					if (this._TeamInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam_keyChanging(value);
					this.SendPropertyChanging();
					this._team_key = value;
					this.SendPropertyChanged("team_key");
					this.Onteam_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_id", DbType="Int")]
		public System.Nullable<int> week_id
		{
			get
			{
				return this._week_id;
			}
			set
			{
				if ((this._week_id != value))
				{
					if (this._WeekInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweek_idChanging(value);
					this.SendPropertyChanging();
					this._week_id = value;
					this.SendPropertyChanged("week_id");
					this.Onweek_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_games_played", DbType="Int")]
		public System.Nullable<int> games_played
		{
			get
			{
				return this._games_played;
			}
			set
			{
				if ((this._games_played != value))
				{
					this.Ongames_playedChanging(value);
					this.SendPropertyChanging();
					this._games_played = value;
					this.SendPropertyChanged("games_played");
					this.Ongames_playedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_games_missed", DbType="Int")]
		public System.Nullable<int> games_missed
		{
			get
			{
				return this._games_missed;
			}
			set
			{
				if ((this._games_missed != value))
				{
					this.Ongames_missedChanging(value);
					this.SendPropertyChanging();
					this._games_missed = value;
					this.SendPropertyChanged("games_missed");
					this.Ongames_missedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_points", DbType="Int")]
		public System.Nullable<int> points
		{
			get
			{
				return this._points;
			}
			set
			{
				if ((this._points != value))
				{
					this.OnpointsChanging(value);
					this.SendPropertyChanging();
					this._points = value;
					this.SendPropertyChanged("points");
					this.OnpointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rebounds", DbType="Int")]
		public System.Nullable<int> rebounds
		{
			get
			{
				return this._rebounds;
			}
			set
			{
				if ((this._rebounds != value))
				{
					this.OnreboundsChanging(value);
					this.SendPropertyChanging();
					this._rebounds = value;
					this.SendPropertyChanged("rebounds");
					this.OnreboundsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists", DbType="Int")]
		public System.Nullable<int> assists
		{
			get
			{
				return this._assists;
			}
			set
			{
				if ((this._assists != value))
				{
					this.OnassistsChanging(value);
					this.SendPropertyChanging();
					this._assists = value;
					this.SendPropertyChanged("assists");
					this.OnassistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_steals", DbType="Int")]
		public System.Nullable<int> steals
		{
			get
			{
				return this._steals;
			}
			set
			{
				if ((this._steals != value))
				{
					this.OnstealsChanging(value);
					this.SendPropertyChanging();
					this._steals = value;
					this.SendPropertyChanged("steals");
					this.OnstealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blocks", DbType="Int")]
		public System.Nullable<int> blocks
		{
			get
			{
				return this._blocks;
			}
			set
			{
				if ((this._blocks != value))
				{
					this.OnblocksChanging(value);
					this.SendPropertyChanging();
					this._blocks = value;
					this.SendPropertyChanged("blocks");
					this.OnblocksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(10)")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayerInfo_NBAWeeklyPlayerStat", Storage="_PlayerInfo", ThisKey="player_key", OtherKey="player_key", IsForeignKey=true)]
		public PlayerInfo PlayerInfo
		{
			get
			{
				return this._PlayerInfo.Entity;
			}
			set
			{
				PlayerInfo previousValue = this._PlayerInfo.Entity;
				if (((previousValue != value) 
							|| (this._PlayerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlayerInfo.Entity = null;
						previousValue.NBAWeeklyPlayerStats.Remove(this);
					}
					this._PlayerInfo.Entity = value;
					if ((value != null))
					{
						value.NBAWeeklyPlayerStats.Add(this);
						this._player_key = value.player_key;
					}
					else
					{
						this._player_key = default(string);
					}
					this.SendPropertyChanged("PlayerInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_NBAWeeklyPlayerStat", Storage="_TeamInfo", ThisKey="team_key", OtherKey="team_key", IsForeignKey=true)]
		public TeamInfo TeamInfo
		{
			get
			{
				return this._TeamInfo.Entity;
			}
			set
			{
				TeamInfo previousValue = this._TeamInfo.Entity;
				if (((previousValue != value) 
							|| (this._TeamInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamInfo.Entity = null;
						previousValue.NBAWeeklyPlayerStats.Remove(this);
					}
					this._TeamInfo.Entity = value;
					if ((value != null))
					{
						value.NBAWeeklyPlayerStats.Add(this);
						this._team_key = value.team_key;
					}
					else
					{
						this._team_key = default(string);
					}
					this.SendPropertyChanged("TeamInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_NBAWeeklyPlayerStat", Storage="_WeekInfo", ThisKey="week_id", OtherKey="id", IsForeignKey=true)]
		public WeekInfo WeekInfo
		{
			get
			{
				return this._WeekInfo.Entity;
			}
			set
			{
				WeekInfo previousValue = this._WeekInfo.Entity;
				if (((previousValue != value) 
							|| (this._WeekInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeekInfo.Entity = null;
						previousValue.NBAWeeklyPlayerStats.Remove(this);
					}
					this._WeekInfo.Entity = value;
					if ((value != null))
					{
						value.NBAWeeklyPlayerStats.Add(this);
						this._week_id = value.id;
					}
					else
					{
						this._week_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("WeekInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NBAWeeklyTeamStats")]
	public partial class NBAWeeklyTeamStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _team_key;
		
		private System.Nullable<int> _week_id;
		
		private System.Nullable<int> _games_played;
		
		private System.Nullable<int> _games_missed;
		
		private System.Nullable<int> _points;
		
		private System.Nullable<int> _assists;
		
		private System.Nullable<int> _rebounds;
		
		private System.Nullable<int> _steals;
		
		private System.Nullable<int> _blocks;
		
		private System.Nullable<bool> _points_win;
		
		private System.Nullable<bool> _rebounds_win;
		
		private System.Nullable<bool> _assists_win;
		
		private System.Nullable<bool> _steals_win;
		
		private System.Nullable<bool> _blocks_win;
		
		private System.Nullable<bool> _points_tie;
		
		private System.Nullable<bool> _rebounds_tie;
		
		private System.Nullable<bool> _assists_tie;
		
		private System.Nullable<bool> _steals_tie;
		
		private System.Nullable<bool> _blocks_tie;
		
		private EntityRef<TeamInfo> _TeamInfo;
		
		private EntityRef<WeekInfo> _WeekInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onteam_keyChanging(string value);
    partial void Onteam_keyChanged();
    partial void Onweek_idChanging(System.Nullable<int> value);
    partial void Onweek_idChanged();
    partial void Ongames_playedChanging(System.Nullable<int> value);
    partial void Ongames_playedChanged();
    partial void Ongames_missedChanging(System.Nullable<int> value);
    partial void Ongames_missedChanged();
    partial void OnpointsChanging(System.Nullable<int> value);
    partial void OnpointsChanged();
    partial void OnassistsChanging(System.Nullable<int> value);
    partial void OnassistsChanged();
    partial void OnreboundsChanging(System.Nullable<int> value);
    partial void OnreboundsChanged();
    partial void OnstealsChanging(System.Nullable<int> value);
    partial void OnstealsChanged();
    partial void OnblocksChanging(System.Nullable<int> value);
    partial void OnblocksChanged();
    partial void Onpoints_winChanging(System.Nullable<bool> value);
    partial void Onpoints_winChanged();
    partial void Onrebounds_winChanging(System.Nullable<bool> value);
    partial void Onrebounds_winChanged();
    partial void Onassists_winChanging(System.Nullable<bool> value);
    partial void Onassists_winChanged();
    partial void Onsteals_winChanging(System.Nullable<bool> value);
    partial void Onsteals_winChanged();
    partial void Onblocks_winChanging(System.Nullable<bool> value);
    partial void Onblocks_winChanged();
    partial void Onpoints_tieChanging(System.Nullable<bool> value);
    partial void Onpoints_tieChanged();
    partial void Onrebounds_tieChanging(System.Nullable<bool> value);
    partial void Onrebounds_tieChanged();
    partial void Onassists_tieChanging(System.Nullable<bool> value);
    partial void Onassists_tieChanged();
    partial void Onsteals_tieChanging(System.Nullable<bool> value);
    partial void Onsteals_tieChanged();
    partial void Onblocks_tieChanging(System.Nullable<bool> value);
    partial void Onblocks_tieChanged();
    #endregion
		
		public NBAWeeklyTeamStat()
		{
			this._TeamInfo = default(EntityRef<TeamInfo>);
			this._WeekInfo = default(EntityRef<WeekInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_key", DbType="NVarChar(50)")]
		public string team_key
		{
			get
			{
				return this._team_key;
			}
			set
			{
				if ((this._team_key != value))
				{
					if (this._TeamInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam_keyChanging(value);
					this.SendPropertyChanging();
					this._team_key = value;
					this.SendPropertyChanged("team_key");
					this.Onteam_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_id", DbType="Int")]
		public System.Nullable<int> week_id
		{
			get
			{
				return this._week_id;
			}
			set
			{
				if ((this._week_id != value))
				{
					if (this._WeekInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweek_idChanging(value);
					this.SendPropertyChanging();
					this._week_id = value;
					this.SendPropertyChanged("week_id");
					this.Onweek_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_games_played", DbType="Int")]
		public System.Nullable<int> games_played
		{
			get
			{
				return this._games_played;
			}
			set
			{
				if ((this._games_played != value))
				{
					this.Ongames_playedChanging(value);
					this.SendPropertyChanging();
					this._games_played = value;
					this.SendPropertyChanged("games_played");
					this.Ongames_playedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_games_missed", DbType="Int")]
		public System.Nullable<int> games_missed
		{
			get
			{
				return this._games_missed;
			}
			set
			{
				if ((this._games_missed != value))
				{
					this.Ongames_missedChanging(value);
					this.SendPropertyChanging();
					this._games_missed = value;
					this.SendPropertyChanged("games_missed");
					this.Ongames_missedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_points", DbType="Int")]
		public System.Nullable<int> points
		{
			get
			{
				return this._points;
			}
			set
			{
				if ((this._points != value))
				{
					this.OnpointsChanging(value);
					this.SendPropertyChanging();
					this._points = value;
					this.SendPropertyChanged("points");
					this.OnpointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists", DbType="Int")]
		public System.Nullable<int> assists
		{
			get
			{
				return this._assists;
			}
			set
			{
				if ((this._assists != value))
				{
					this.OnassistsChanging(value);
					this.SendPropertyChanging();
					this._assists = value;
					this.SendPropertyChanged("assists");
					this.OnassistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rebounds", DbType="Int")]
		public System.Nullable<int> rebounds
		{
			get
			{
				return this._rebounds;
			}
			set
			{
				if ((this._rebounds != value))
				{
					this.OnreboundsChanging(value);
					this.SendPropertyChanging();
					this._rebounds = value;
					this.SendPropertyChanged("rebounds");
					this.OnreboundsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_steals", DbType="Int")]
		public System.Nullable<int> steals
		{
			get
			{
				return this._steals;
			}
			set
			{
				if ((this._steals != value))
				{
					this.OnstealsChanging(value);
					this.SendPropertyChanging();
					this._steals = value;
					this.SendPropertyChanged("steals");
					this.OnstealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blocks", DbType="Int")]
		public System.Nullable<int> blocks
		{
			get
			{
				return this._blocks;
			}
			set
			{
				if ((this._blocks != value))
				{
					this.OnblocksChanging(value);
					this.SendPropertyChanging();
					this._blocks = value;
					this.SendPropertyChanged("blocks");
					this.OnblocksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_points_win", DbType="Bit")]
		public System.Nullable<bool> points_win
		{
			get
			{
				return this._points_win;
			}
			set
			{
				if ((this._points_win != value))
				{
					this.Onpoints_winChanging(value);
					this.SendPropertyChanging();
					this._points_win = value;
					this.SendPropertyChanged("points_win");
					this.Onpoints_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rebounds_win", DbType="Bit")]
		public System.Nullable<bool> rebounds_win
		{
			get
			{
				return this._rebounds_win;
			}
			set
			{
				if ((this._rebounds_win != value))
				{
					this.Onrebounds_winChanging(value);
					this.SendPropertyChanging();
					this._rebounds_win = value;
					this.SendPropertyChanged("rebounds_win");
					this.Onrebounds_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists_win", DbType="Bit")]
		public System.Nullable<bool> assists_win
		{
			get
			{
				return this._assists_win;
			}
			set
			{
				if ((this._assists_win != value))
				{
					this.Onassists_winChanging(value);
					this.SendPropertyChanging();
					this._assists_win = value;
					this.SendPropertyChanged("assists_win");
					this.Onassists_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_steals_win", DbType="Bit")]
		public System.Nullable<bool> steals_win
		{
			get
			{
				return this._steals_win;
			}
			set
			{
				if ((this._steals_win != value))
				{
					this.Onsteals_winChanging(value);
					this.SendPropertyChanging();
					this._steals_win = value;
					this.SendPropertyChanged("steals_win");
					this.Onsteals_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blocks_win", DbType="Bit")]
		public System.Nullable<bool> blocks_win
		{
			get
			{
				return this._blocks_win;
			}
			set
			{
				if ((this._blocks_win != value))
				{
					this.Onblocks_winChanging(value);
					this.SendPropertyChanging();
					this._blocks_win = value;
					this.SendPropertyChanged("blocks_win");
					this.Onblocks_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_points_tie", DbType="Bit")]
		public System.Nullable<bool> points_tie
		{
			get
			{
				return this._points_tie;
			}
			set
			{
				if ((this._points_tie != value))
				{
					this.Onpoints_tieChanging(value);
					this.SendPropertyChanging();
					this._points_tie = value;
					this.SendPropertyChanged("points_tie");
					this.Onpoints_tieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rebounds_tie", DbType="Bit")]
		public System.Nullable<bool> rebounds_tie
		{
			get
			{
				return this._rebounds_tie;
			}
			set
			{
				if ((this._rebounds_tie != value))
				{
					this.Onrebounds_tieChanging(value);
					this.SendPropertyChanging();
					this._rebounds_tie = value;
					this.SendPropertyChanged("rebounds_tie");
					this.Onrebounds_tieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists_tie", DbType="Bit")]
		public System.Nullable<bool> assists_tie
		{
			get
			{
				return this._assists_tie;
			}
			set
			{
				if ((this._assists_tie != value))
				{
					this.Onassists_tieChanging(value);
					this.SendPropertyChanging();
					this._assists_tie = value;
					this.SendPropertyChanged("assists_tie");
					this.Onassists_tieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_steals_tie", DbType="Bit")]
		public System.Nullable<bool> steals_tie
		{
			get
			{
				return this._steals_tie;
			}
			set
			{
				if ((this._steals_tie != value))
				{
					this.Onsteals_tieChanging(value);
					this.SendPropertyChanging();
					this._steals_tie = value;
					this.SendPropertyChanged("steals_tie");
					this.Onsteals_tieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blocks_tie", DbType="Bit")]
		public System.Nullable<bool> blocks_tie
		{
			get
			{
				return this._blocks_tie;
			}
			set
			{
				if ((this._blocks_tie != value))
				{
					this.Onblocks_tieChanging(value);
					this.SendPropertyChanging();
					this._blocks_tie = value;
					this.SendPropertyChanged("blocks_tie");
					this.Onblocks_tieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamInfo_NBAWeeklyTeamStat", Storage="_TeamInfo", ThisKey="team_key", OtherKey="team_key", IsForeignKey=true)]
		public TeamInfo TeamInfo
		{
			get
			{
				return this._TeamInfo.Entity;
			}
			set
			{
				TeamInfo previousValue = this._TeamInfo.Entity;
				if (((previousValue != value) 
							|| (this._TeamInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamInfo.Entity = null;
						previousValue.NBAWeeklyTeamStats.Remove(this);
					}
					this._TeamInfo.Entity = value;
					if ((value != null))
					{
						value.NBAWeeklyTeamStats.Add(this);
						this._team_key = value.team_key;
					}
					else
					{
						this._team_key = default(string);
					}
					this.SendPropertyChanged("TeamInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WeekInfo_NBAWeeklyTeamStat", Storage="_WeekInfo", ThisKey="week_id", OtherKey="id", IsForeignKey=true)]
		public WeekInfo WeekInfo
		{
			get
			{
				return this._WeekInfo.Entity;
			}
			set
			{
				WeekInfo previousValue = this._WeekInfo.Entity;
				if (((previousValue != value) 
							|| (this._WeekInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeekInfo.Entity = null;
						previousValue.NBAWeeklyTeamStats.Remove(this);
					}
					this._WeekInfo.Entity = value;
					if ((value != null))
					{
						value.NBAWeeklyTeamStats.Add(this);
						this._week_id = value.id;
					}
					else
					{
						this._week_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("WeekInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
